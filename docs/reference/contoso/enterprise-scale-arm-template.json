{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "topLevelManagementGroupPrefix": {
            "type": "string",
            "defaultValue": "e210",
            "maxLength": 5,
            "metadata": {
                "description": "This will be used as prefix for the top level Management Group and subsequent child Management Groups to ensure naming uniqueness for Management Groups inside your Azure Tenant. 
                                Please keep prefix to 3-5 characters.
                                This should create following hierarchy of Management Group where ES (stands for Enterprise-Scale) denotes the prefix specified for the value of parameter.
                                <prefix>
                                |--<prefix>-LandingZones
                                    |--<prefix>-online
                                    |--<prefix>-sap
                                    |--<prefix>-corp
                                |--<prefix>-platform
                                |--<prefix>-decomissioned
                                |--<prefix>-sandboxes
                                "
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/Azure/Enterprise-Scale/main/docs/Deploy/reference/",
            "metadata": {
                "description": "This is the link to the nested template that must to be accessible to ARM to be able to use as a part of nested deployment. 
                                Please feel free to use template hosted here or override with choice of your location.
                                If you chose to do so, please ensure future bug fixes are incorporated from above location to your private location."
            }
        },
        "_artifactsLocationSasToken": {
            "type": "string",
            "defaultValue": ""
        },
        "rootManagementGroupIdToReplace": {
            "type": "string",
            "defaultValue": "/providers/Microsoft.Management/managementGroups/3fc1081d-6105-4e19-b60c-1ec1252cf560",
            "metadata": {
                "description": "This will find the Tenant ID from the source template to replace with 'rootManagementGroupIdToReplaceWith'"
            }
        },
        "rootManagementGroupIdToReplaceWith": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Replace value for Tenant ID. Leave this to your Tenant ID or empty string value (recommended) to ensure top level Management Group is placed under the root Management Group. Alternative you can specify any valid Management Group Resource ID."
            }
        },
        "setup": {
            "type": "string",
            "allowedValues": [
                "Foundation",
                "VWAN",
                "HubSpoke"
            ]
        }
    },
    "variables": {
        "nestedTemplatesLocation": {
            // ARM templates from https://github.com/Azure/AzOps to facilitate end-to-end provisioning for all Azure scopes
            "tenantTemplate": "https://raw.githubusercontent.com/Azure/AzOps/main/template/tenant.json",
            "resourceTemplate": "https://raw.githubusercontent.com/Azure/AzOps/main/template/template.json",
            // ARM templates for the different reference implementations in the Enterprise-Scale repository
            "foundationTemplateParameters": "[uri(parameters('_artifactsLocation'), concat('wingtip/e2e-landing-zone-foundation-orchestration.parameters.json', parameters('_artifactsLocationSasToken')))]",
            "vWanTemplateParameters": "[uri(parameters('_artifactsLocation'), concat('contoso/e2e-landing-zone-vwan-orchestration.parameters.json', parameters('_artifactsLocationSasToken')))]",
            "hubSpokeTemplateParameters": "[uri(parameters('_artifactsLocation'), concat('adventureworks/e2e-landing-zone-hubspoke-orchestration.parameters.json', parameters('_artifactsLocationSasToken')))]"
        },
        "resolverTemplateName": "[concat('EntScale', deployment().location, guid(parameters('topLevelManagementGroupPrefix')))]",
        "enterpriseScaleTemplateName": "[concat('EntScale', deployment().location, guid(parameters('setup')))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "location": "[deployment().location]",
            "name": "[variables('resolverTemplateName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "input": {
                            "type": "object",
                            "metadata": {
                                "description": "input parameter for RESTful representation"
                            }
                        }
                    },
                    "variables": {
                        "topLevelManagementGroupPrefix" : "[parameters('topLevelManagementGroupPrefix')]",
                        "rootManagementGroupIdToReplace" : "[parameters('rootManagementGroupIdToReplace')]",
                        "rootManagementGroupIdToReplaceWith" : "[parameters('rootManagementGroupIdToReplaceWith')]"
                    },
                    "resources": [
                    ],
                    "outputs": {
                        "deploymentJson": {
                            "condition": "[bool('true')]",
                            "type": "object",
                            "value": "[[json(replace(replace(string(parameters('input')),'Tailspin',variables('topLevelManagementGroupPrefix')),variables('rootManagementGroupIdToReplace'),variables('rootManagementGroupIdToReplaceWith')))]"
                        }
                    }
                },
                "parametersLink": {
                    "uri": "[if(equals(parameters('setup'), 'Foundation'), variables('nestedTemplatesLocation').foundationTemplateParameters, variables('nestedTemplatesLocation').vWanTemplateParameters)]"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "location": "[deployment().location]",
            "name": "[variables('enterpriseScaleTemplateName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nestedTemplatesLocation').tenantTemplate]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "input": {
                        "value": "[reference(variables('resolverTemplateName')).outputs.deploymentJson.Value]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "deploymentJson": {
            "condition": "[bool('true')]",
            "type": "object",
            "value": "[reference(variables('resolverTemplateName')).outputs.deploymentJson]"
        }
    }
}