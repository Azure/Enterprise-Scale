{
  "type": "Microsoft.Authorization/policySetDefinitions",
  "apiVersion": "2021-06-01",
  "name": "Alerting-Connectivity",
  "properties": {
    "displayName": "Deploy Connectivity alerts",
    "description": "Initiative to deploy AMBA alerts relevant to the ALZ Connectivity Management group",
    "metadata": {    
      "version": "1.2.0",
      "category": "Monitoring",
      "source": "https://github.com/Azure/Enterprise-Scale/",
      "alzCloudEnvironments": [
        "AzureCloud"
      ],
      "_deployed_by_alz_monitor": true
    },
    "parameters": {
      "ALZMonitorResourceGroupName": {
        "type": "String",
        "defaultValue": "ALZ-Monitoring-RG"
      },
      "ALZMonitorResourceGroupTags": {
        "type": "Object",
        "defaultValue": {
          "_deployed_by_alz_monitor": true
        }
      },
      "ALZMonitorResourceGroupLocation": {
        "type": "String",
        "defaultValue": "centralus"
      },
      "ERCIRQoSDropBitsinPerSecAlertSeverity": {
        "type": "String",
        "defaultValue": "2",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "ERCIRQoSDropBitsinPerSecWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "ERCIRQoSDropBitsinPerSecEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "ERCIRQoSDropBitsinPerSecPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "ERCIRQoSDropBitsinPerSecAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "ERCIRQoSDropBitsoutPerSecAlertSeverity": {
        "type": "String",
        "defaultValue": "2",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "ERCIRQoSDropBitsoutPerSecWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "ERCIRQoSDropBitsoutPerSecEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "ERCIRQoSDropBitsoutPerSecPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "ERCIRQoSDropBitsoutPerSecAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VPNGwBGPPeerStatusAlertSeverity": {
        "type": "String",
        "defaultValue": "3",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VPNGwBGPPeerStatusWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VPNGwBGPPeerStatusEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VPNGwBGPPeerStatusPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VPNGwBGPPeerStatusAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VPNGwBGPPeerStatusThreshold": {
        "type": "string",
        "defaultValue": "1"
      },
      "VnetGwERCpuUtilAlertSeverity": {
        "type": "String",
        "defaultValue": "3",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VnetGwERCpuUtilWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VnetGwERCpuUtilEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT1M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VnetGwERCpuUtilPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VnetGwERCpuUtilAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VnetGwERCpuUtilThreshold": {
        "type": "string",
        "defaultValue": "80"
      },
      "VnetGwTunnelBWAlertSeverity": {
        "type": "String",
        "defaultValue": "0",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VnetGwTunnelBWWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VnetGwTunnelBWEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT1M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VnetGwTunnelBWPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VnetGwTunnelBWAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VnetGwTunnelBWThreshold": {
        "type": "string",
        "defaultValue": "1"
      },
      "VnetGwTunnelEgressAlertSeverity": {
        "type": "String",
        "defaultValue": "0",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VnetGwTunnelEgressWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VnetGwTunnelEgressEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VnetGwTunnelEgressPolicyEffect": {
        "type": "string",
        "defaultValue": "disabled",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VnetGwTunnelEgressAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VnetGwTunnelEgressThreshold": {
        "type": "string",
        "defaultValue": "1"
      },
      "VnetGwTunnelIngressAlertSeverity": {
        "type": "String",
        "defaultValue": "0",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VnetGwTunnelIngressWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VnetGwTunnelIngressEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VnetGwTunnelIngressPolicyEffect": {
        "type": "string",
        "defaultValue": "disabled",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VnetGwTunnelIngressAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VnetGwTunnelIngressThreshold": {
        "type": "string",
        "defaultValue": "1"
      },
      "VPNGWBandWidthUtilAlertSeverity": {
        "type": "String",
        "defaultValue": "0",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VPNGWBandWidthUtilWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VPNGWBandWidthUtilEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VPNGWBandWidthUtilPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VPNGWBandWidthUtilAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VPNGWBandWidthUtilThreshold": {
        "type": "string",
        "defaultValue": "1"
      },
      "VPNGWEgressAlertSeverity": {
        "type": "String",
        "defaultValue": "0",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VPNGWEgressWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VPNGWEgressEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VPNGWEgressPolicyEffect": {
        "type": "string",
        "defaultValue": "disabled",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VPNGWEgressAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VPNGWEgressThreshold": {
        "type": "string",
        "defaultValue": "1"
      },
      "VPNGWTunnelEgressPacketDropCountAlertSeverity": {
        "type": "String",
        "defaultValue": "3",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VPNGWTunnelEgressPacketDropCountWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VPNGWTunnelEgressPacketDropCountFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VPNGWTunnelEgressPacketDropCountPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VPNGWTunnelEgressPacketDropCountAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VPNGWTunnelEgressPacketDropMismatchAlertSeverity": {
        "type": "String",
        "defaultValue": "3",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VPNGWTunnelEgressPacketDropMismatchWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VPNGWTunnelEgressPacketDropMismatchFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VPNGWTunnelEgressPacketDropMismatchPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VPNGWTunnelEgressPacketDropMismatchAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VPNGWIngressAlertSeverity": {
        "type": "string",
        "defaultValue": "0",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VPNGWIngressWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VPNGWIngressEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VPNGWIngressPolicyEffect": {
        "type": "string",
        "defaultValue": "disabled",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VPNGWIngressAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VPNGWIngressThreshold": {
        "type": "string",
        "defaultValue": "1"
      },
      "VPNGWIngressAutoMitigate": {
        "type": "string",
        "defaultValue": "true"
      },
      "VPNGWTunnelIngressPacketDropCountAlertSeverity": {
        "type": "String",
        "defaultValue": "3",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VPNGWTunnelIngressPacketDropCountWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VPNGWTunnelIngressPacketDropCountFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VPNGWTunnelIngressPacketDropCountPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VPNGWTunnelIngressPacketDropCountAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VPNGWTunnelIngressPacketDropMismatchAlertSeverity": {
        "type": "String",
        "defaultValue": "3",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VPNGWTunnelIngressPacketDropMismatchWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VPNGWTunnelIngressPacketDropMismatchFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VPNGWTunnelIngressPacketDropMismatchPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VPNGWTunnelIngressPacketDropMismatchAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "PDNSZCapacityUtilAlertSeverity": {
        "type": "String",
        "defaultValue": "2",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "PDNSZCapacityUtilWindowSize": {
        "type": "string",
        "defaultValue": "PT1H",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "PDNSZCapacityUtilEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT1H",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "PDNSZCapacityUtilPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "PDNSZCapacityUtilAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "PDNSZCapacityUtilThreshold": {
        "type": "string",
        "defaultValue": "80"
      },
      "PDNSZQueryVolumeAlertSeverity": {
        "type": "String",
        "defaultValue": "4",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "PDNSZQueryVolumeWindowSize": {
        "type": "string",
        "defaultValue": "PT1H",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "PDNSZQueryVolumeEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT1H",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "PDNSZQueryVolumePolicyEffect": {
        "type": "string",
        "defaultValue": "disabled",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "PDNSZQueryVolumeAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "PDNSZQueryVolumeThreshold": {
        "type": "string",
        "defaultValue": "500"
      },
      "PDNSZRecordSetCapacityAlertSeverity": {
        "type": "String",
        "defaultValue": "2",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "PDNSZRecordSetCapacityWindowSize": {
        "type": "string",
        "defaultValue": "PT1H",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "PDNSZRecordSetCapacityEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT1H",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "PDNSZRecordSetCapacityPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "PDNSZRecordSetCapacityAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "PDNSZRecordSetCapacityThreshold": {
        "type": "string",
        "defaultValue": "80"
      },
      "PDNSZRegistrationCapacityUtilAlertSeverity": {
        "type": "String",
        "defaultValue": "2",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "PDNSZRegistrationCapacityUtilWindowSize": {
        "type": "string",
        "defaultValue": "PT1H",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "PDNSZRegistrationCapacityUtilEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT1H",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "PDNSZRegistrationCapacityUtilPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "PDNSZRegistrationCapacityUtilAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "PDNSZRegistrationCapacityUtilThreshold": {
        "type": "string",
        "defaultValue": "80"
      },
      "PIPDDoSAttackAlertSeverity": {
        "type": "String",
        "defaultValue": "1",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "PIPDDoSAttackWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "PIPDDoSAttackEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "PIPDDoSAttackPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "PIPDDoSAttackAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "PIPDDoSAttackThreshold": {
        "type": "string",
        "defaultValue": "0"
      },
      "PIPPacketsInDDoSAlertSeverity": {
        "type": "String",
        "defaultValue": "4",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "PIPPacketsInDDoSWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "PIPPacketsInDDoSEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "PIPPacketsInDDoSPolicyEffect": {
        "type": "string",
        "defaultValue": "disabled",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "PIPPacketsInDDoSAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "PIPPacketsInDDoSThreshold": {
        "type": "string",
        "defaultValue": "40000"
      },
      "PIPVIPAvailabilityAlertSeverity": {
        "type": "String",
        "defaultValue": "1",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "PIPVIPAvailabilityWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "PIPVIPAvailabilityEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT1M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "PIPVIPAvailabilityPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "PIPVIPAvailabilityAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "PIPVIPAvailabilityThreshold": {
        "type": "string",
        "defaultValue": "1"
      },
      "PIPBytesInDDoSAlertSeverity": {
        "type": "String",
        "defaultValue": "4",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "PIPBytesInDDoSWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "PIPBytesInDDoSEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "PIPBytesInDDoSPolicyEffect": {
        "type": "string",
        "defaultValue": "disabled",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "PIPBytesInDDoSAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "PIPBytesInDDoSThreshold": {
        "type": "string",
        "defaultValue": "8000000"
      },
      "ERGwExpressRouteBitsInAlertSeverity": {
        "type": "String",
        "defaultValue": "0",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "ERGwExpressRouteBitsInWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "ERGwExpressRouteBitsInEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "ERGwExpressRouteBitsInPolicyEffect": {
        "type": "string",
        "defaultValue": "disabled",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "ERGwExpressRouteBitsInAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "ERGwExpressRouteBitsInThreshold": {
        "type": "string",
        "defaultValue": "1"
      },
      "ERGwExpressRouteBitsOutAlertSeverity": {
        "type": "String",
        "defaultValue": "0",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "ERGwExpressRouteBitsOutWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "ERGwExpressRouteBitsOutEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "ERGwExpressRouteBitsOutPolicyEffect": {
        "type": "string",
        "defaultValue": "disabled",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "ERGwExpressRouteBitsOutAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "ERGwExpressRouteBitsOutThreshold": {
        "type": "string",
        "defaultValue": "1"
      },
      "ERGwExpressRouteCpuUtilAlertSeverity": {
        "type": "String",
        "defaultValue": "1",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "ERGwExpressRouteCpuUtilWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "ERGwExpressRouteCpuUtilEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT1M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "ERGwExpressRouteCpuUtilPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "ERGwExpressRouteCpuUtilAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "ERGwExpressRouteCpuUtilThreshold": {
        "type": "string",
        "defaultValue": "80"
      },
      "VNETDDOSAttackAlertSeverity": {
        "type": "String",
        "defaultValue": "1",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VNETDDOSAttackWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VNETDDOSAttackEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT1M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VNETDDOSAttackPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VNETDDOSAttackAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VNETDDOSAttackThreshold": {
        "type": "string",
        "defaultValue": "1"
      },
      "VnetGwTunnelEgressPacketDropCountAlertSeverity": {
        "type": "String",
        "defaultValue": "1",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VnetGwTunnelEgressPacketDropCountWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VnetGwTunnelEgressPacketDropCountEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VnetGwTunnelEgressPacketDropCountPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VnetGwTunnelEgressPacketDropCountAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VnetGwTunnelEgressPacketDropMismatchAlertSeverity": {
        "type": "String",
        "defaultValue": "3",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VnetGwTunnelEgressPacketDropMismatchWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VnetGwTunnelEgressPacketDropMismatchEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VnetGwTunnelEgressPacketDropMismatchPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VnetGwTunnelEgressPacketDropMismatchAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VnetGwExpressRouteBitsPerSecondAlertSeverity": {
        "type": "String",
        "defaultValue": "0",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VnetGwExpressRouteBitsPerSecondWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VnetGwExpressRouteBitsPerSecondEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT1M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VnetGwExpressRouteBitsPerSecondPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VnetGwExpressRouteBitsPerSecondAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VnetGwExpressRouteBitsPerSecondThreshold": {
        "type": "string",
        "defaultValue": "1"
      },
      "VnetGwTunnelIngressPacketDropMismatchAlertSeverity": {
        "type": "String",
        "defaultValue": "3",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VnetGwTunnelIngressPacketDropMismatchWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VnetGwTunnelIngressPacketDropMismatchEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VnetGwTunnelIngressPacketDropMismatchPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VnetGwTunnelIngressPacketDropMismatchAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "VnetGwTunnelIngressPacketDropCountAlertSeverity": {
        "type": "String",
        "defaultValue": "3",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "VnetGwTunnelIngressPacketDropCountWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "VnetGwTunnelIngressPacketDropCountEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "VnetGwTunnelIngressPacketDropCountPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "VnetGwTunnelIngressPacketDropCountAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "ERCIRBgpAvailabilityAlertSeverity": {
        "type": "String",
        "defaultValue": "0",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "ERCIRBgpAvailabilityWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "ERCIRBgpAvailabilityEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT1M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "ERCIRBgpAvailabilityPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "ERCIRBgpAvailabilityAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "ERCIRBgpAvailabilityThreshold": {
        "type": "string",
        "defaultValue": "90"
      },
      "ERCIRArpAvailabilityAlertSeverity": {
        "type": "String",
        "defaultValue": "0",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "ERCIRArpAvailabilityWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "ERCIRArpAvailabilityFrequency": {
        "type": "string",
        "defaultValue": "PT1M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "ERCIRArpAvailabilityPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "ERCIRArpAvailabilityAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "ERCIRArpAvailabilityThreshold": {
        "type": "string",
        "defaultValue": "90"
      },
      "AFWSNATPortUtilizationAlertSeverity": {
        "type": "String",
        "defaultValue": "1",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "AFWSNATPortUtilizationWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "AFWSNATPortUtilizationFrequency": {
        "type": "string",
        "defaultValue": "PT1M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "AFWSNATPortUtilizationPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "AFWSNATPortUtilizationAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "AFWSNATPortUtilizationThreshold": {
        "type": "string",
        "defaultValue": "80"
      },
      "FirewallHealthAlertSeverity": {
        "type": "String",
        "defaultValue": "0",
        "allowedValues": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ]
      },
      "FirewallHealthWindowSize": {
        "type": "string",
        "defaultValue": "PT5M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H",
          "PT6H",
          "PT12H",
          "P1D"
        ]
      },
      "FirewallHealthEvaluationFrequency": {
        "type": "string",
        "defaultValue": "PT1M",
        "allowedValues": [
          "PT1M",
          "PT5M",
          "PT15M",
          "PT30M",
          "PT1H"
        ]
      },
      "FirewallHealthPolicyEffect": {
        "type": "string",
        "defaultValue": "deployIfNotExists",
        "allowedValues": [
          "deployIfNotExists",
          "disabled"
        ]
      },
      "FirewallHealthAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "FirewallHealthThreshold": {
        "type": "string",
        "defaultValue": "90"
      },
      "activityFWDeleteAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "activityNSGDeleteAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "activityUDRUpdateAlertState": {
        "type": "string",
        "defaultValue": "true"
      },
      "activityVPNGWDeleteAlertState": {
        "type": "string",
        "defaultValue": "true"
      }
    },
    "policyDefinitions": [
      {
        "policyDefinitionReferenceId": "ALZ_ERCIRQoSDropBitsinPerSec",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_QosDropBitsInPerSecond_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('ERCIRQoSDropBitsinPerSecAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('ERCIRQoSDropBitsinPerSecWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('ERCIRQoSDropBitsinPerSecEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('ERCIRQoSDropBitsinPerSecPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('ERCIRQoSDropBitsinPerSecAlertState')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_ERCIRQoSDropBitsoutPerSec",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_QosDropBitsOutPerSecond_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('ERCIRQoSDropBitsoutPerSecAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('ERCIRQoSDropBitsoutPerSecWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('ERCIRQoSDropBitsoutPerSecEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('ERCIRQoSDropBitsoutPerSecPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('ERCIRQoSDropBitsoutPerSecAlertState')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VPNGwBGPPeerStatus",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_BGPPeerStatus_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VPNGwBGPPeerStatusAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VPNGwBGPPeerStatusWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VPNGwBGPPeerStatusEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VPNGwBGPPeerStatusPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VPNGwBGPPeerStatusAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('VPNGwBGPPeerStatusThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VnetGwERCpuUtil",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_ExpressRouteCpuUtil_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VnetGwERCpuUtilAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VnetGwERCpuUtilWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VnetGwERCpuUtilEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VnetGwERCpuUtilPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VnetGwERCpuUtilAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('VnetGwERCpuUtilThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VnetGwTunnelBW",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelBandwidth_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VnetGwTunnelBWAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VnetGwTunnelBWWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VnetGwTunnelBWEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VnetGwTunnelBWPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VnetGwTunnelBWAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('VnetGwTunnelBWThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VnetGwTunnelEgress",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelEgress_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VnetGwTunnelEgressAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VnetGwTunnelEgressWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VnetGwTunnelEgressEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VnetGwTunnelEgressPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VnetGwTunnelEgressAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('VnetGwTunnelEgressThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VnetGwTunnelIngress",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelIngress_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VnetGwTunnelIngressAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VnetGwTunnelIngressWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VnetGwTunnelIngressEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VnetGwTunnelIngressPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VnetGwTunnelIngressAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('VnetGwTunnelIngressThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VPNGWBandWidthUtil",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_BandwidthUtil_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VPNGWBandWidthUtilAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VPNGWBandWidthUtilWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VPNGWBandWidthUtilEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VPNGWBandWidthUtilPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VPNGWBandWidthUtilAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('VPNGWBandWidthUtilThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VPNGWEgress",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_Egress_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VPNGWEgressAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VPNGWEgressWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VPNGWEgressEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VPNGWEgressPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VPNGWEgressAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('VPNGWEgressThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VPNGWTunnelEgressPacketDropCount",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelEgressPacketDropCount_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VPNGWTunnelEgressPacketDropCountAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VPNGWTunnelEgressPacketDropCountWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VPNGWTunnelEgressPacketDropCountFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VPNGWTunnelEgressPacketDropCountPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VPNGWTunnelEgressPacketDropCountAlertState')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VPNGWTunnelEgressPacketDropMismatch",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelEgressPacketDropMismatch_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VPNGWTunnelEgressPacketDropMismatchAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VPNGWTunnelEgressPacketDropMismatchWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VPNGWTunnelEgressPacketDropMismatchFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VPNGWTunnelEgressPacketDropMismatchPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VPNGWTunnelEgressPacketDropMismatchAlertState')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VPNGWIngress",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_Ingress_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VPNGWIngressAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VPNGWIngressWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VPNGWIngressEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VPNGWIngressPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VPNGWIngressAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('VPNGWIngressThreshold')]"
          },
          "autoMitigate": {
            "value": "[[parameters('VPNGWIngressAutoMitigate')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VPNGWTunnelIngressPacketDropCount",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelIngressPacketDropCount_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VPNGWTunnelIngressPacketDropCountAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VPNGWTunnelIngressPacketDropCountWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VPNGWTunnelIngressPacketDropCountFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VPNGWTunnelIngressPacketDropCountPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VPNGWTunnelIngressPacketDropCountAlertState')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VPNGWTunnelIngressPacketDropMismatch",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VPNGw_TunnelIngressPacketDropMismatch_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VPNGWTunnelIngressPacketDropMismatchAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VPNGWTunnelIngressPacketDropMismatchWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VPNGWTunnelIngressPacketDropMismatchFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VPNGWTunnelIngressPacketDropMismatchPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VPNGWTunnelIngressPacketDropMismatchAlertState')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_PDNSZCapacityUtil",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_CapacityUtil_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('PDNSZCapacityUtilAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('PDNSZCapacityUtilWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('PDNSZCapacityUtilEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('PDNSZCapacityUtilPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('PDNSZCapacityUtilAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('PDNSZCapacityUtilThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_PDNSZQueryVolume",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_QueryVolume_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('PDNSZQueryVolumeAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('PDNSZQueryVolumeWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('PDNSZQueryVolumeEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('PDNSZQueryVolumePolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('PDNSZQueryVolumeAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('PDNSZQueryVolumeThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_PDNSZRecordSetCapacity",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_PDNSZ_RecordSetCapacity_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('PDNSZRecordSetCapacityAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('PDNSZRecordSetCapacityWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('PDNSZRecordSetCapacityEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('PDNSZRecordSetCapacityPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('PDNSZRecordSetCapacityAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('PDNSZRecordSetCapacityThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_PDNSZRegistrationCapacityUtil",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_DNSZ_RegistrationCapacityUtil_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('PDNSZRegistrationCapacityUtilAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('PDNSZRegistrationCapacityUtilWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('PDNSZRegistrationCapacityUtilEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('PDNSZRegistrationCapacityUtilPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('PDNSZRegistrationCapacityUtilAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('PDNSZRegistrationCapacityUtilThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_ERGwExpressRouteBitsIn",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERGw_ExpressRouteBitsIn_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('ERGwExpressRouteBitsInAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('ERGwExpressRouteBitsInWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('ERGwExpressRouteBitsInEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('ERGwExpressRouteBitsInPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('ERGwExpressRouteBitsInAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('ERGwExpressRouteBitsInThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_ERGwExpressRouteBitsOut",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERGw_ExpressRouteBitsOut_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('ERGwExpressRouteBitsOutAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('ERGwExpressRouteBitsOutWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('ERGwExpressRouteBitsOutEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('ERGwExpressRouteBitsOutPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('ERGwExpressRouteBitsOutAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('ERGwExpressRouteBitsOutThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_ERGwExpressRouteCpuUtil",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERGw_ExpressRouteCpuUtil_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('ERGwExpressRouteCpuUtilAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('ERGwExpressRouteCpuUtilWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('ERGwExpressRouteCpuUtilEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('ERGwExpressRouteCpuUtilPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('ERGwExpressRouteCpuUtilAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('ERGwExpressRouteCpuUtilThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VnetGwTunnelEgressPacketDropCount",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelEgressPacketDropCount_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VnetGwTunnelEgressPacketDropCountAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VnetGwTunnelEgressPacketDropCountWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VnetGwTunnelEgressPacketDropCountEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VnetGwTunnelEgressPacketDropCountPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VnetGwTunnelEgressPacketDropCountAlertState')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VnetGwTunnelEgressPacketDropMismatch",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelEgressPacketDropMismatch_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VnetGwTunnelEgressPacketDropMismatchAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VnetGwTunnelEgressPacketDropMismatchWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VnetGwTunnelEgressPacketDropMismatchEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VnetGwTunnelEgressPacketDropMismatchPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VnetGwTunnelEgressPacketDropMismatchAlertState')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VnetGwExpressRouteBitsPerSecond",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_ExpressRouteBitsPerSecond_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VnetGwExpressRouteBitsPerSecondAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VnetGwExpressRouteBitsPerSecondWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VnetGwExpressRouteBitsPerSecondEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VnetGwExpressRouteBitsPerSecondPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VnetGwExpressRouteBitsPerSecondAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('VnetGwExpressRouteBitsPerSecondThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VnetGwTunnelIngressPacketDropMismatchWindowSize",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelIngressPacketDropMismatch_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VnetGwTunnelIngressPacketDropMismatchAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VnetGwTunnelIngressPacketDropMismatchWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VnetGwTunnelIngressPacketDropMismatchEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VnetGwTunnelIngressPacketDropMismatchPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VnetGwTunnelIngressPacketDropMismatchAlertState')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VnetGwTunnelIngressPacketDropCountWindowSize",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VnetGw_TunnelIngressPacketDropCount_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VnetGwTunnelIngressPacketDropCountAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VnetGwTunnelIngressPacketDropCountWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VnetGwTunnelIngressPacketDropCountEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VnetGwTunnelIngressPacketDropCountPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VnetGwTunnelIngressPacketDropCountAlertState')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_ERCIRBgpAvailability",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_BgpAvailability_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('ERCIRBgpAvailabilityAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('ERCIRBgpAvailabilityWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('ERCIRBgpAvailabilityEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('ERCIRBgpAvailabilityPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('ERCIRBgpAvailabilityAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('ERCIRBgpAvailabilityThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_ERCIRArpAvailability",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_ERCIR_ArpAvailability_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('ERCIRArpAvailabilityAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('ERCIRArpAvailabilityWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('ERCIRArpAvailabilityFrequency')]"
          },
          "effect": {
            "value": "[[parameters('ERCIRArpAvailabilityPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('ERCIRArpAvailabilityAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('ERCIRArpAvailabilityThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_AFWSNATPortUtilization",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_AFW_SNATPortUtilization_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('AFWSNATPortUtilizationAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('AFWSNATPortUtilizationWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('AFWSNATPortUtilizationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('AFWSNATPortUtilizationPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('AFWSNATPortUtilizationAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('AFWSNATPortUtilizationThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_PIPBytesInDDoSEvaluationFrequency",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_BytesInDDoSAttack_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('PIPBytesInDDoSAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('PIPBytesInDDoSWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('PIPBytesInDDoSEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('PIPBytesInDDoSPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('PIPBytesInDDoSAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('PIPBytesInDDoSThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_PIPDDoSAttack",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_DDoSAttack_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('PIPDDoSAttackAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('PIPDDoSAttackWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('PIPDDoSAttackEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('PIPDDoSAttackPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('PIPDDoSAttackAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('PIPDDoSAttackThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_PIPPacketsInDDoS",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_PacketsInDDoSAttack_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('PIPPacketsInDDoSAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('PIPPacketsInDDoSWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('PIPPacketsInDDoSEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('PIPPacketsInDDoSPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('PIPPacketsInDDoSAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('PIPPacketsInDDoSThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_PIPVIPAvailability",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_PublicIp_VIPAvailability_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('PIPVIPAvailabilityAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('PIPVIPAvailabilityWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('PIPVIPAvailabilityEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('PIPVIPAvailabilityPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('PIPVIPAvailabilityAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('PIPVIPAvailabilityThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_VNETDDOSAttack",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_VNET_DDoSAttack_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('VNETDDOSAttackAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('VNETDDOSAttackWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('VNETDDOSAttackEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('VNETDDOSAttackPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('VNETDDOSAttackAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('VNETDDOSAttackThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_FirewallHealth",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_AFW_FirewallHealth_Alert')]",
        "parameters": {
          "severity": {
            "value": "[[parameters('FirewallHealthAlertSeverity')]"
          },
          "windowSize": {
            "value": "[[parameters('FirewallHealthWindowSize')]"
          },
          "evaluationFrequency": {
            "value": "[[parameters('FirewallHealthEvaluationFrequency')]"
          },
          "effect": {
            "value": "[[parameters('FirewallHealthPolicyEffect')]"
          },
          "enabled": {
            "value": "[[parameters('FirewallHealthAlertState')]"
          },
          "threshold": {
            "value": "[[parameters('FirewallHealthThreshold')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_activityFWDelete",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_Firewall_Delete')]",
        "parameters": {
          "enabled": {
            "value": "[[parameters('activityFWDeleteAlertState')]"
          },
          "alertResourceGroupName": {
            "value": "[[parameters('ALZMonitorResourceGroupName')]"
          },
          "alertResourceGroupTags": {
            "value": "[[parameters('ALZMonitorResourceGroupTags')]"
          },
          "alertResourceGroupLocation": {
            "value": "[[parameters('ALZMonitorResourceGroupLocation')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_activityNSGDelete",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_NSG_Delete')]",
        "parameters": {
          "enabled": {
            "value": "[[parameters('activityNSGDeleteAlertState')]"
          },
          "alertResourceGroupName": {
            "value": "[[parameters('ALZMonitorResourceGroupName')]"
          },
          "alertResourceGroupTags": {
            "value": "[[parameters('ALZMonitorResourceGroupTags')]"
          },
          "alertResourceGroupLocation": {
            "value": "[[parameters('ALZMonitorResourceGroupLocation')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_activityUDRUpdate",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_RouteTable_Update')]",
        "parameters": {
          "enabled": {
            "value": "[[parameters('activityUDRUpdateAlertState')]"
          },
          "alertResourceGroupName": {
            "value": "[[parameters('ALZMonitorResourceGroupName')]"
          },
          "alertResourceGroupTags": {
            "value": "[[parameters('ALZMonitorResourceGroupTags')]"
          },
          "alertResourceGroupLocation": {
            "value": "[[parameters('ALZMonitorResourceGroupLocation')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ALZ_activityVPNGWDelete",
        "policyDefinitionId": "[concat('/providers/Microsoft.Management/managementGroups/',managementGroup().name, '/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_VPNGateway_Delete')]",
        "parameters": {
          "enabled": {
            "value": "[[parameters('activityVPNGWDeleteAlertState')]"
          },
          "alertResourceGroupName": {
            "value": "[[parameters('ALZMonitorResourceGroupName')]"
          },
          "alertResourceGroupTags": {
            "value": "[[parameters('ALZMonitorResourceGroupTags')]"
          },
          "alertResourceGroupLocation": {
            "value": "[[parameters('ALZMonitorResourceGroupLocation')]"
          }
        }
      }
    ],
    "policyType": "Custom",
    "policyDefinitionGroups": null
  }
}