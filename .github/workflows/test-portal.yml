---
name: Test Portal Experience

##########################################
# Start the job on push for all branches #
##########################################

# yamllint disable-line rule:truthy
on:
  pull_request:
    types:
      - edited
      - opened
      - reopened
      - synchronize
    paths:
      - 'eslzArm/**.json'
      - 'src/**.json'
      - 'src/**.bicep'
  workflow_dispatch: {}

env:
  github_base_url: ${{ github.event.pull_request.base.html_url }}
  github_commit_id: ${{ github.event.pull_request.head.sha }}
  github_workflow_run_id: ${{ github.event.workflow_run.id }}
  subscriptions_json_path: "./src/data/subscriptions.json"

permissions:
  contents: read
  id-token: write

###############
# Set the Job #
###############
jobs:
  test-portal:
    name: Test Portal Experience
    runs-on: ubuntu-latest
    environment: csu-rw

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Show env
        run: env | sort

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Register subscriptions
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Import-Module ./src/Alz.Tools/
            $subscriptionAliases = @(
                "csu-portal-connectivity-100"
                "csu-portal-identity-110"
                "csu-portal-management-120"
                "csu-portal-corp-201"
                "csu-portal-corp-202"
                "csu-portal-corp-203"
                "csu-portal-online-211"
                "csu-portal-online-212"
            )
            Write-Information "Registering Subscription Aliases : $($subscriptionAliases.foreach({ "`n $_" }))" -InformationAction Continue
            $subscriptions = Register-AzureSubscription `
                -Alias $subscriptionAliases `
                -BillingScope $env:BILLING_SCOPE `
                -Workload "Production" `
                -SetParentManagementGroup `
                -SetAddressPrefix
            Write-Information "Saving Subscription Aliases to : $($env:SUBSCRIPTIONS_JSON_PATH)" -InformationAction Continue
            $subscriptions | ConvertTo-Json -Depth 10 | New-Item -Path $env:SUBSCRIPTIONS_JSON_PATH -ItemType File -Force
            Get-Content -Path $env:SUBSCRIPTIONS_JSON_PATH | jq
          azPSVersion: "latest"
        env:
          BILLING_SCOPE: ${{ secrets.BILLING_SCOPE }}

      - name: Deploy eslzArm.json
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $rootId = "$($env:GITHUB_WORKFLOW_RUN_ID)".Substring(0,$((@($env:GITHUB_WORKFLOW_RUN_ID.length,10) | Measure-Object -Minimum).Minimum))
            $subscriptions = Get-Content -Path $env:SUBSCRIPTIONS_JSON_PATH | ConvertFrom-Json
            $connectivitySubscriptionId = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "connectivity")[0].properties.subscriptionId
            $connectivityAddressPrefix = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "connectivity")[0].addressPrefix
            $identitySubscriptionId = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "identity")[0].properties.subscriptionId
            $identityAddressPrefix = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "identity")[0].addressPrefix
            $managementSubscriptionId = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "management")[0].properties.subscriptionId
            $corpLzSubscriptionId = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "corp").properties.subscriptionId
            $onlineLzSubscriptionId = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "online").properties.subscriptionId
            $templateUri = "$($env:GITHUB_BASE_URL)/commit/$($env:GITHUB_COMMIT_ID)/eslzArm/eslzArm.json"
            $templateParameterUri = "$($env:GITHUB_BASE_URL)/commit/$($env:GITHUB_COMMIT_ID)/eslzArm/eslzArm.test.param.json"
            $deployment = New-AzTenantDeployment `
                -Name "$rootId" `
                -Location "$($env:DEPLOYMENT_LOCATION)" `
                -TemplateUri "$templateUri" `
                -TemplateParameterUri "$templateParameterUri" `
                -enterpriseScaleCompanyPrefix "$rootId" `
                -managementSubscriptionId "$managementSubscriptionId" `
                -connectivitySubscriptionId "$connectivitySubscriptionId" `
                -connectivityLocation "$($env:DEPLOYMENT_LOCATION)" `
                -addressPrefix "$connectivityAddressPrefix" `
                -identitySubscriptionId "$identitySubscriptionId" `
                -identityAddressPrefix "$identityAddressPrefix" `
                -corpLzSubscriptionId "$corpLzSubscriptionId" `
                -onlineLzSubscriptionId "$onlineLzSubscriptionId" `
                -WhatIf
            if ($deployment.ProvisioningState -ne "Succeeded") {
                throw "Provisioning failed... check activity and deployment logs in Azure for more information."
            }
          azPSVersion: "latest"
