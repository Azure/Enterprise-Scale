---
name: Test Portal Experience

##########################################
# Start the job on push for all branches #
##########################################

# yamllint disable-line rule:truthy
on:
  pull_request:
    types:
      - edited
      - opened
      - reopened
      - synchronize
    paths:
      - 'eslzArm/**.json'
      - 'src/**.json'
      - 'src/**.bicep'
  workflow_dispatch: {}

env:
  GITHUB_COMMIT_ID: ${{ github.event.pull_request.head.sha }}
  GITHUB_PR_ID: ${{ github.event.pull_request.id }}
  SUBSCRIPTIONS_JSON_PATH: "./src/data/subscriptions.json"

permissions:
  contents: read
  id-token: write

###############
# Set the Job #
###############
jobs:
  test-portal:
    name: Test Portal Experience
    runs-on: ubuntu-latest
    environment: csu-rw

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Show env
        run: env | sort

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Register subscriptions
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Import-Module ./src/Alz.Tools/
            $subscriptionAliases = @(
                "csu-portal-connectivity-100"
                "csu-portal-identity-110"
                "csu-portal-management-120"
                "csu-portal-corp-201"
                "csu-portal-corp-202"
                "csu-portal-corp-203"
                "csu-portal-online-211"
                "csu-portal-online-212"
            )
            Write-Information "Registering Subscription Aliases : $($subscriptionAliases.foreach({ "`n $_" }))" -InformationAction Continue
            $subscriptions = Register-AzureSubscription `
                -Alias $subscriptionAliases `
                -BillingScope $env:BILLING_SCOPE `
                -Workload "Production" `
                -SetParentManagementGroup `
                -SetAddressPrefix
            Write-Information "Saving Subscription Aliases to : $($env:SUBSCRIPTIONS_JSON_PATH)" -InformationAction Continue
            $subscriptions | ConvertTo-Json -Depth 10 | New-Item -Path $env:SUBSCRIPTIONS_JSON_PATH -ItemType File -Force
            Get-Content -Path $env:SUBSCRIPTIONS_JSON_PATH | jq
          azPSVersion: "latest"
        env:
          BILLING_SCOPE: ${{ secrets.BILLING_SCOPE }}

      - name: Deploy eslzArm.json
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Write-Information "Loading Subscription Aliases from : $($env:SUBSCRIPTIONS_JSON_PATH)" -InformationAction Continue
            $subscriptions = Get-Content -Path $env:SUBSCRIPTIONS_JSON_PATH | ConvertFrom-Json
            $connectivitySubscriptionId = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "connectivity")[0].properties.subscriptionId
            $connectivityAddressPrefix = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "connectivity")[0].addressPrefix
            $identitySubscriptionId = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "identity")[0].properties.subscriptionId
            $identityAddressPrefix = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "identity")[0].addressPrefix
            $managementSubscriptionId = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "management")[0].properties.subscriptionId
            $corpLzSubscriptionId = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "corp").properties.subscriptionId
            $onlineLzSubscriptionId = ($subscriptions | Where-Object -Property "parentManagementGroup" -EQ "online").properties.subscriptionId

            $rootId = "$($env:GITHUB_RUN_ID)".Substring(0,$((@($env:GITHUB_RUN_ID.length,10) | Measure-Object -Minimum).Minimum))

            $templateUri = "https://raw.githubusercontent.com/$($env:GITHUB_REPOSITORY)/$($env:GITHUB_COMMIT_ID)/eslzArm/eslzArm.json"
            $templateParameterPath = "./eslzArm/eslzArm.test.param.json"

            Write-Information "Loading parameter defaults from : $templateParameterPath" -InformationAction Continue
            $loadTemplateParameterFile = (Get-Content -Path $templateParameterPath | ConvertFrom-Json -AsHashTable).parameters
            $templateParameterObject = @{} | Add-Member -MemberType ScriptMethod -Name AddOrUpdate -Value {
                param($key,$value)
                $this[$key] = $value
            } -Force -PassThru
            $loadTemplateParameterFile.Keys.foreach({ $templateParameterObject.Add($_, $loadTemplateParameterFile[$_]['value']) })

            Write-Information "Setting environment specific parameter values..." -InformationAction Continue
            $templateParameterObject.AddOrUpdate('enterpriseScaleCompanyPrefix',$rootId)
            $templateParameterObject.AddOrUpdate('managementSubscriptionId',$managementSubscriptionId)
            $templateParameterObject.AddOrUpdate('connectivitySubscriptionId',$connectivitySubscriptionId)
            $templateParameterObject.AddOrUpdate('connectivityLocation',$env:DEPLOYMENT_LOCATION)
            $templateParameterObject.AddOrUpdate('addressPrefix',$connectivityAddressPrefix)
            $templateParameterObject.AddOrUpdate('identitySubscriptionId',$identitySubscriptionId)
            $templateParameterObject.AddOrUpdate('identityAddressPrefix',$identityAddressPrefix)
            $templateParameterObject.AddOrUpdate('corpLzSubscriptionId',$corpLzSubscriptionId)
            $templateParameterObject.AddOrUpdate('onlineLzSubscriptionId',$onlineLzSubscriptionId)

            $maxKeyLength = ($templateParameterObject.Keys.Length | Measure-Object -Maximum).Maximum

            Write-Information "Running test deployment [rootId = $rootId]..." -InformationAction Continue
            Write-Information " - Template URI : $templateUri" -InformationAction Continue
            ($templateParameterObject.Keys | Sort-Object ).foreach({ Write-Information " - [Parameter] $($_.PadRight($maxKeyLength, ' ')) : $($templateParameterObject[$_])" -InformationAction Continue })

            New-AzTenantDeployment `
                -Name $rootId `
                -Location $env:DEPLOYMENT_LOCATION `
                -TemplateUri $templateUri `
                -TemplateParameterObject $templateParameterObject `
                -WhatIf

            # if ($deployment.ProvisioningState -ne "Succeeded") {
            #     throw "Provisioning failed... check activity and deployment logs in Azure for more information."
            # }
          azPSVersion: "latest"
        env:
          DEPLOYMENT_LOCATION: ${{ secrets.DEPLOYMENT_LOCATION }}
