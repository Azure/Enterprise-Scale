{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.13.1.58284",
      "templateHash": "13990457898413488598"
    }
  },
  "parameters": {
    "topLevelManagementGroupPrefix": {
      "type": "string",
      "defaultValue": "alz",
      "maxLength": 10,
      "metadata": {
        "description": "Provide a prefix (max 10 characters, unique at tenant-scope) for the Management Group hierarchy and other resources created as part of an Azure landing zone. DEFAULT VALUE = \"alz\"",
        "message": "The JSON version of this file is programatically generated from Bicep. PLEASE DO NOT UPDATE MANUALLY!!"
      }
    },
    "scope": {
      "type": "string",
      "defaultValue": "[tenantResourceId('Microsoft.Management/managementGroups', parameters('topLevelManagementGroupPrefix'))]",
      "metadata": {
        "description": "Optinally Used to set the assignableScopes for the Role Definitions. Must be one of '/', '/subscriptions/id' or '/providers/Microsoft.Management/managementGroups/id'. DEFAULT VALUE = '/providers/Microsoft.Management/managementGroups/${topLevelManagementGroupPrefix}'"
      }
    }
  },
  "variables": {
    "$fxv#0": "{\r\n  \"name\": \"c9a07a05-a1fc-53fe-a565-5eed25597c03\",\r\n  \"type\": \"Microsoft.Authorization/roleDefinitions\",\r\n  \"apiVersion\": \"2022-04-01\",\r\n  \"properties\": {\r\n    \"roleName\": \"[contoso] Application-Owners\",\r\n    \"description\": \"Contributor role granted for application/operations team at resource group level\",\r\n    \"type\": \"customRole\",\r\n    \"permissions\": [\r\n      {\r\n        \"actions\": [\r\n          \"*\"\r\n        ],\r\n        \"notActions\": [\r\n          \"Microsoft.Authorization/*/write\",\r\n          \"Microsoft.Network/publicIPAddresses/write\",\r\n          \"Microsoft.Network/virtualNetworks/write\",\r\n          \"Microsoft.KeyVault/locations/deletedVaults/purge/action\"\r\n        ],\r\n        \"dataActions\": [],\r\n        \"notDataActions\": []\r\n      }\r\n    ],\r\n    \"assignableScopes\": [\r\n      \"/providers/Microsoft.Management/managementGroups/contoso\"\r\n    ]\r\n  }\r\n}",
    "$fxv#1": "{\r\n  \"name\": \"dc726155-3983-5405-b446-9bb27b94e02c\",\r\n  \"type\": \"Microsoft.Authorization/roleDefinitions\",\r\n  \"apiVersion\": \"2022-04-01\",\r\n  \"properties\": {\r\n      \"roleName\": \"[contoso] Network-Management\",\r\n      \"description\": \"Platform-wide global connectivity management: virtual networks, UDRs, NSGs, NVAs, VPN, Azure ExpressRoute, and others\",\r\n      \"type\": \"customRole\",\r\n      \"permissions\": [\r\n          {\r\n              \"actions\": [\r\n                  \"*/read\", \r\n                  \"Microsoft.Network/*\", \r\n                  \"Microsoft.Resources/deployments/*\", \r\n                  \"Microsoft.Support/*\"\r\n              ],\r\n              \"notActions\": [],\r\n              \"dataActions\": [],\r\n              \"notDataActions\": []\r\n          }\r\n      ],\r\n      \"assignableScopes\": [\r\n          \"/providers/Microsoft.Management/managementGroups/contoso\"\r\n      ]\r\n  }\r\n}",
    "$fxv#2": "{\r\n  \"name\": \"d3584a79-4f0d-5980-aa3c-7a76ba783b76\",\r\n  \"type\": \"Microsoft.Authorization/roleDefinitions\",\r\n  \"apiVersion\": \"2022-04-01\",\r\n  \"properties\": {\r\n      \"roleName\": \"[contoso] Security-Operations\",\r\n      \"description\": \"Security Administrator role with a horizontal view across the entire Azure estate and the Azure Key Vault purge policy.\",\r\n      \"type\": \"customRole\",\r\n      \"permissions\": [\r\n          {\r\n              \"actions\": [\r\n                  \"*/read\",\r\n                  \"*/register/action\",\r\n                  \"Microsoft.KeyVault/locations/deletedVaults/purge/action\",\r\n                  \"Microsoft.PolicyInsights/*\",\r\n                  \"Microsoft.Authorization/policyAssignments/*\",\r\n                  \"Microsoft.Authorization/policyDefinitions/*\",\r\n                  \"Microsoft.Authorization/policyExemptions/*\",\r\n                  \"Microsoft.Authorization/policySetDefinitions/*\",\r\n                  \"Microsoft.Insights/alertRules/*\",\r\n                  \"Microsoft.Resources/deployments/*\",\r\n                  \"Microsoft.Security/*\",\r\n                  \"Microsoft.Support/*\"\r\n              ],\r\n              \"notActions\": [],\r\n              \"dataActions\": [],\r\n              \"notDataActions\": []\r\n          }\r\n      ],\r\n      \"assignableScopes\": [\r\n          \"/providers/Microsoft.Management/managementGroups/contoso\"\r\n      ]\r\n  }\r\n}",
    "$fxv#3": "{\r\n  \"name\": \"402344ce-48c4-5ac1-9320-16726050f964\",\r\n  \"type\": \"Microsoft.Authorization/roleDefinitions\",\r\n  \"apiVersion\": \"2022-04-01\",\r\n  \"properties\": {\r\n      \"roleName\": \"[contoso] Subscription-Owner\",\r\n      \"description\": \"Delegated role for subscription owner generated from subscription Owner role\",\r\n      \"type\": \"customRole\",\r\n      \"permissions\": [\r\n          {\r\n              \"actions\": [\r\n                  \"*\"\r\n              ],\r\n              \"notActions\": [\r\n                  \"Microsoft.Authorization/*/write\", \r\n                  \"Microsoft.Network/vpnGateways/*\", \r\n                  \"Microsoft.Network/expressRouteCircuits/*\", \r\n                  \"Microsoft.Network/routeTables/write\", \r\n                  \"Microsoft.Network/vpnSites/*\"\r\n              ],\r\n              \"dataActions\": [],\r\n              \"notDataActions\": []\r\n          }\r\n      ],\r\n      \"assignableScopes\": [\r\n          \"/providers/Microsoft.Management/managementGroups/contoso\"\r\n      ]\r\n  }\r\n}",
    "copy": [
      {
        "name": "processRoleDefinitionsAll",
        "count": "[length(variables('loadRoleDefinitions').All)]",
        "input": "[replace(replace(variables('loadRoleDefinitions').All[copyIndex('processRoleDefinitionsAll')], variables('templateVars').scope, parameters('scope')), variables('templateVars').roleDisplayNameScope, format('[{0}]', parameters('topLevelManagementGroupPrefix')))]"
      },
      {
        "name": "processRoleDefinitionsAzureCloud",
        "count": "[length(variables('loadRoleDefinitions').AzureCloud)]",
        "input": "[replace(replace(variables('loadRoleDefinitions').AzureCloud[copyIndex('processRoleDefinitionsAzureCloud')], variables('templateVars').scope, parameters('scope')), variables('templateVars').roleDisplayNameScope, format('[{0}]', parameters('topLevelManagementGroupPrefix')))]"
      },
      {
        "name": "processRoleDefinitionsAzureChinaCloud",
        "count": "[length(variables('loadRoleDefinitions').AzureChinaCloud)]",
        "input": "[replace(replace(variables('loadRoleDefinitions').AzureChinaCloud[copyIndex('processRoleDefinitionsAzureChinaCloud')], variables('templateVars').scope, parameters('scope')), variables('templateVars').roleDisplayNameScope, format('[{0}]', parameters('topLevelManagementGroupPrefix')))]"
      },
      {
        "name": "processRoleDefinitionsAzureUSGovernment",
        "count": "[length(variables('loadRoleDefinitions').AzureUSGovernment)]",
        "input": "[replace(replace(variables('loadRoleDefinitions').AzureUSGovernment[copyIndex('processRoleDefinitionsAzureUSGovernment')], variables('templateVars').scope, parameters('scope')), variables('templateVars').roleDisplayNameScope, format('[{0}]', parameters('topLevelManagementGroupPrefix')))]"
      },
      {
        "name": "roleDefinitionsAll",
        "count": "[length(variables('processRoleDefinitionsAll'))]",
        "input": "[json(variables('processRoleDefinitionsAll')[copyIndex('roleDefinitionsAll')])]"
      },
      {
        "name": "roleDefinitionsAzureCloud",
        "count": "[length(variables('processRoleDefinitionsAzureCloud'))]",
        "input": "[json(variables('processRoleDefinitionsAzureCloud')[copyIndex('roleDefinitionsAzureCloud')])]"
      },
      {
        "name": "roleDefinitionsAzureChinaCloud",
        "count": "[length(variables('processRoleDefinitionsAzureChinaCloud'))]",
        "input": "[json(variables('processRoleDefinitionsAzureChinaCloud')[copyIndex('roleDefinitionsAzureChinaCloud')])]"
      },
      {
        "name": "roleDefinitionsAzureUSGovernment",
        "count": "[length(variables('processRoleDefinitionsAzureUSGovernment'))]",
        "input": "[json(variables('processRoleDefinitionsAzureUSGovernment')[copyIndex('roleDefinitionsAzureUSGovernment')])]"
      }
    ],
    "cloudEnv": "[environment().name]",
    "templateVars": {
      "scope": "/providers/Microsoft.Management/managementGroups/contoso",
      "roleDisplayNameScope": "[[contoso]"
    },
    "loadRoleDefinitions": {
      "All": [
        "[variables('$fxv#0')]",
        "[variables('$fxv#1')]",
        "[variables('$fxv#2')]",
        "[variables('$fxv#3')]"
      ],
      "AzureCloud": [],
      "AzureChinaCloud": [],
      "AzureUSGovernment": []
    },
    "roleDefinitionsByCloudType": {
      "All": "[variables('roleDefinitionsAll')]",
      "AzureCloud": "[variables('roleDefinitionsAzureCloud')]",
      "AzureChinaCloud": "[variables('roleDefinitionsAzureChinaCloud')]",
      "AzureUSGovernment": "[variables('roleDefinitionsAzureUSGovernment')]"
    },
    "roleDefinitions": "[concat(variables('roleDefinitionsByCloudType').All, variables('roleDefinitionsByCloudType')[variables('cloudEnv')])]"
  },
  "resources": [
    {
      "copy": {
        "name": "RoleDefinitions",
        "count": "[length(variables('roleDefinitions'))]"
      },
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2022-04-01",
      "name": "[guid(variables('roleDefinitions')[copyIndex()].properties.roleName, parameters('topLevelManagementGroupPrefix'))]",
      "properties": {
        "roleName": "[variables('roleDefinitions')[copyIndex()].properties.roleName]",
        "description": "[variables('roleDefinitions')[copyIndex()].properties.description]",
        "type": "[variables('roleDefinitions')[copyIndex()].properties.type]",
        "permissions": "[variables('roleDefinitions')[copyIndex()].properties.permissions]",
        "assignableScopes": "[variables('roleDefinitions')[copyIndex()].properties.assignableScopes]"
      }
    }
  ]
}