{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "topLevelManagementGroupPrefix": {
            "type": "string",
            "metadata": {
                "description": "Provide the ESLZ company prefix to the intermediate root management group containing the policy definitions."
            }
        },
        "policySetDefinitionId": {
            "type": "string",
            "metadata": {
                "description": "Resource ID of the Policy Initative (Set Definition)"
            }
        },
        "policySetDefinitionDisplayName": {
            "type": "string",
            "metadata": {
                "description": "The Display Name for the Policy Initative (Set Definition)"
            }
        },
        "policySetDefinitionDescription": {
            "type": "string",
            "metadata": {
                "description": "The Description for the Policy Initative (Set Definition)"
            }
        },
        "policyAssignmentName": {
            "type": "string",
            "metadata": {
                "description": "The name for the Policy Assignment"
            }
        },
        "enforcementMode": {
            "type": "string",
            "allowedValues": [
                "Default",
                "DoNotEnforce"
            ],
            "defaultValue": "Default"
        },
        "logAnalyticsWorkspaceId": {
            "type": "string",
            "metadata": {
                "description": "The Resource ID of the Log Analytics Workspace"
            }
        },
        "regCompPolParAusGovIsmRestrictedVmAdminsExclude": {
            "type": "string"
        },
        "regCompPolParAusGovIsmRestrictedResourceTypes": {
            "type": "string"
        },
        "regCompPolParMPAACertificateThumb": {
            "type": "string"
        },
        "regCompPolParMPAAApplicationName": {
            "type": "string"
        },
        "regCompPolParMPAAStoragePrefix": {
            "type": "string"
        },
        "regCompPolParMPAAResGroupPrefix": {
            "type": "string"
        },
        "regCompPolParMPAARBatchMetricName": {
            "type": "string"
        },
        "regCompPolParSovBaseConfRegions": {
            "type": "array"
        },
        "regCompPolParSovBaseGlobalRegions": {
            "type": "array"
        },
        "regCompPolParSwift2020VmAdminsInclude": {
            "type": "string"
        },
        "regCompPolParSwift2020DomainFqdn": {
            "type": "string"
        },
        "regCompPolParCanadaFedPbmmVmAdminsInclude": {
            "type": "string"
        },
        "regCompPolParCanadaFedPbmmVmAdminsExclude": {
            "type": "string"
        },
        "regCompPolParCisV2KeyVaultKeysRotateDays": {
            "type": "int"
        },
        "regCompPolParCmmcL3VmAdminsInclude": {
            "type": "string"
        },
        "regCompPolParCmmcL3VmAdminsExclude": {
            "type": "string"
        },
        "regCompPolParHitrustHipaaApplicationName": {
            "type": "string"
        },
        "regCompPolParHitrustHipaaStoragePrefix": {
            "type": "string"
        },
        "regCompPolParHitrustHipaaResGroupPrefix": {
            "type": "string"
        },
        "regCompPolParHitrustHipaaCertificateThumb": {
            "type": "string"
        },
        "regCompPolParIrs1075Sep2016VmAdminsExclude": {
            "type": "string"
        },
        "regCompPolParIrs1075Sep2016VmAdminsInclude": {
            "type": "string"
        },
        "regCompPolParNZIsmRestrictedVmAdminsInclude": {
            "type": "string"
        },
        "regCompPolParNZIsmRestrictedVmAdminsExclude": {
            "type": "string"
        },
        "regCompPolParNistSp800171R2VmAdminsExclude": {
            "type": "string"
        },
        "regCompPolParNistSp800171R2VmAdminsInclude": {
            "type": "string"
        },
        "regCompPolParSoc2Type2AllowedRegistries": {
            "type": "string"
        },
        "regCompPolParSoc2Type2MaxCpuUnits": {
            "type": "string"
        },
        "regCompPolParSoc2Type2MaxMemoryBytes": {
            "type": "string"
        }
    },
    "variables": {
        "rbacContributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
        "roleAssignmentNames": {
            "deployRoles": "[guid(concat(parameters('topLevelManagementGroupPrefix'), parameters('policyAssignmentName')))]"
        }
    },
    "resources": [
        {
            "condition": "[contains(parameters('policySetDefinitionId'), '/providers/Microsoft.Authorization/policySetDefinitions/27272c0b-c225-4cc3-b8b0-f2534b093077')]",
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2022-06-01",
            "name": "[parameters('policyAssignmentName')]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "[parameters('policySetDefinitionDescription')]",
                "displayName": "[parameters('policySetDefinitionDisplayName')]",
                "policyDefinitionId": "[parameters('policySetDefinitionId')]",
                "enforcementMode": "[parameters('enforcementMode')]",
                "parameters": {
                    "membersToExclude": {
                        "value": "[parameters('regCompPolParAusGovIsmRestrictedVmAdminsExclude')]"
                    },
                    "logAnalyticsWorkspaceId": {
                        "value": "[parameters('logAnalyticsWorkspaceId')]"
                    },
                    "listOfResourceTypes": {
                        "value": "[if(equals(parameters('regCompPolParAusGovIsmRestrictedResourceTypes'), 'all'), true , false )]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2019-04-01-preview",
            "name": "[variables('roleAssignmentNames').deployRoles]",
            "dependsOn": [
                "[parameters('policyAssignmentName')]"
            ],
            "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[concat('/providers/Microsoft.Authorization/roleDefinitions/', variables('rbacContributor'))]",
                "principalId": "[toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', parameters('policyAssignmentName')), '2019-09-01', 'Full' ).identity.principalId)]"
            }
        }
    ],
    "outputs": {}
}