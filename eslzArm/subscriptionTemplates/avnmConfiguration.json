{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "topLevelManagementGroupPrefix": {
            "type": "string",
            "maxLength": 10,
            "defaultValue": "eslz",
            "metadata": {
                "description": "Provide a prefix (max 10 characters, unique at tenant-scope) for the Management Group hierarchy and other resources created as part of Enterprise-scale."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "displayName": "location",
                "description": "Location of the HUB"
            },
            "defaultValue": "[deployment().location]"
        },
        "managementGroupScope": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Management group scope for AVNM. Intermediate root management group is the default."
            }
        },
        "managementSubscriptionId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SubscriptionId for the management subscription. Used to get the user assigned identity."
            }
        },
        "connectivitySubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "SubscriptionId for the connectivity subscription."
            },
            "defaultValue": "[subscription().subscriptionId]"
        }
    },
    "variables": {
        "rgName": "[concat(parameters('topLevelManagementGroupPrefix'), '-avnm')]",
        "resourceDeploymentName": "[take(concat(deployment().name, '-avnm', parameters('location')), 64)]",
        "configIds": "[resourceId(parameters('connectivitySubscriptionId'), variables('rgName'), 'Microsoft.Network/networkManagers/securityAdminConfigurations', 'avnm', format('sac-{0}', parameters('location')))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "location": "[parameters('location')]",
            "name": "[variables('rgName')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[variables('resourceDeploymentName')]",
            "resourceGroup": "[variables('rgName')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/resourceGroups/', variables('rgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "managementGroupScope": {
                        "value": "[parameters('managementGroupScope')]"
                    },
                    "userAssignedIdentityId": {
                        "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('managementSubscriptionId'), 'rg-alz-prereqs'), 'Microsoft.Resources/deployments', 'alz-prerequisites-uai'), '2022-09-01').outputs.userAssignedIdentityId.value]"
                    },
                    "rgName": {
                        "value": "[variables('rgName')]"
                    },
                    "configIds": {
                        "value": "[variables('configIds')]"
                    },
                    "connectivitySubscriptionId": {
                        "value": "[parameters('connectivitySubscriptionId')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "location": {
                            "type": "string"
                        },
                        "managementGroupScope": {
                            "type": "string"
                        },
                        "userAssignedIdentityId": {
                            "type": "string"
                        },
                        "rgName": {
                            "type": "string"
                        },
                        "configIds": {
                            "type": "string"
                        },
                        "connectivitySubscriptionId": {
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/networkManagers",
                            "apiVersion": "2024-03-01",
                            "name": "avnm",
                            "location": "[parameters('location')]",
                            "properties": {
                                "networkManagerScopeAccesses": [
                                    "SecurityAdmin"
                                ],
                                "networkManagerScopes": {
                                    "managementGroups": [
                                        "[parameters('managementGroupScope')]"
                                    ]
                                }
                            },
                            "dependsOn": [
                                
                            ],
                            "metadata": {
                                "description": "This is the Azure Virtual Network Manager which will be used to implement the connected group for spoke-to-spoke connectivity."
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkManagers/networkGroups",
                            "apiVersion": "2024-03-01",
                            "name": "[format('{0}/{1}', 'avnm', format('ng-{0}-static', parameters('location')))]",
                            "properties": {
                                "memberType": "VirtualNetwork",
                                "description": "Network Group - Static"
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkManagers', 'avnm')]"
                            ],
                            "metadata": {
                                "description": "This is the static network group for the spoke VNETs, and hub when topology is mesh."
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkManagers/networkGroups",
                            "apiVersion": "2024-03-01",
                            "name": "[format('{0}/{1}', 'avnm', format('ng-{0}-dynamic', parameters('location')))]",
                            "properties": {
                                "memberType": "VirtualNetwork",
                                "description": "Network Group - Dynamic"
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkManagers', 'avnm')]"
                            ],
                            "metadata": {
                                "description": "This is the dynamic network group for the spoke VNETs, and hub when topology is mesh."
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkManagers/securityAdminConfigurations",
                            "apiVersion": "2023-11-01",
                            "name": "[format('{0}/{1}', 'avnm', format('sac-{0}', parameters('location')))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkManagers', 'avnm')]"
                            ],
                            "properties": {
                                "description": "ALZ Security Admin Configuration"
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections",
                            "apiVersion": "2024-03-01",
                            "name": "[format('{0}/{1}/{2}', 'avnm', format('sac-{0}', parameters('location')), 'rc-ALZ')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations', 'avnm', format('sac-{0}', parameters('location')))]",
                                "[resourceId('Microsoft.Network/networkManagers/networkGroups', 'avnm', format('ng-{0}-static', parameters('location')))]",
                                "[resourceId('Microsoft.Network/networkManagers/networkGroups', 'avnm', format('ng-{0}-dynamic', parameters('location')))]"
                            ],
                            "properties": {
                                "appliesToGroups": [
                                    {
                                        "networkGroupId": "[resourceId('Microsoft.Network/networkManagers/networkGroups', 'avnm', format('ng-{0}-static', parameters('location')))]"
                                    },
                                    {
                                        "networkGroupId": "[resourceId('Microsoft.Network/networkManagers/networkGroups', 'avnm', format('ng-{0}-dynamic', parameters('location')))]"
                                    }

                                ]
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules",
                            "apiVersion": "2024-03-01",
                            "name": "[format('{0}/{1}/{2}/{3}', 'avnm', format('sac-{0}', parameters('location')), 'rc-ALZ', 'DenyMgmtInbound')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections', 'avnm', format('sac-{0}', parameters('location')), 'rc-ALZ')]"
                            ],
                            "kind": "Custom",
                            "properties": {
                                "description": "Deny VM Management inbound traffic",
                                "priority": 1000,
                                "sources": [
                                    {
                                        "addressPrefixType": "ServiceTag",
                                        "addressPrefix": "Internet"
                                    }
                                ],
                                "destinationPortRanges": [
                                    "22",
                                    "3389"
                                ],
                                "protocol": "Any",
                                "direction": "Inbound",
                                "access": "Deny"
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules",
                            "apiVersion": "2024-03-01",
                            "name": "[format('{0}/{1}/{2}/{3}', 'avnm', format('sac-{0}', parameters('location')), 'rc-ALZ', 'DenyHighRiskInboundTCP')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections', 'avnm', format('sac-{0}', parameters('location')), 'rc-ALZ')]"
                            ],
                            "kind": "Custom",
                            "properties": {
                                "description": "Deny high-risk TCP inbound traffic",
                                "priority": 1001,
                                "sources": [
                                    {
                                        "addressPrefixType": "ServiceTag",
                                        "addressPrefix": "Internet"
                                    }
                                ],
                                "destinationPortRanges": [
                                    "20",
                                    "21",
                                    "23",
                                    "119",
                                    "161",
                                    "445",
                                    "512",
                                    "514",
                                    "873",
                                    "5800",
                                    "5900"
                                ],
                                "protocol": "TCP",
                                "direction": "Inbound",
                                "access": "Deny"
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules",
                            "apiVersion": "2024-03-01",
                            "name": "[format('{0}/{1}/{2}/{3}', 'avnm', format('sac-{0}', parameters('location')), 'rc-ALZ', 'DenyHighRiskInboundUDP')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections', 'avnm', format('sac-{0}', parameters('location')), 'rc-ALZ')]"
                            ],
                            "kind": "Custom",
                            "properties": {
                                "description": "Deny high-risk UDP inbound traffic",
                                "priority": 1002,
                                "sources": [
                                    {
                                        "addressPrefixType": "ServiceTag",
                                        "addressPrefix": "Internet"
                                    }
                                ],
                                "destinationPortRanges": [
                                    "69",
                                    "11211"
                                ],
                                "protocol": "UDP",
                                "direction": "Inbound",
                                "access": "Deny"
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules",
                            "apiVersion": "2024-03-01",
                            "name": "[format('{0}/{1}/{2}/{3}', 'avnm', format('sac-{0}', parameters('location')), 'rc-ALZ', 'DenyHighRiskInboundANY')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections', 'avnm', format('sac-{0}', parameters('location')), 'rc-ALZ')]"
                            ],
                            "kind": "Custom",
                            "properties": {
                                "description": "Deny high-risk ANY inbound traffic",
                                "priority": 1003,
                                "sources": [
                                    {
                                        "addressPrefixType": "ServiceTag",
                                        "addressPrefix": "Internet"
                                    }
                                ],
                                "destinationPortRanges": [
                                    "111",
                                    "135",
                                    "162",
                                    "593",
                                    "2049"
                                ],
                                "protocol": "Any",
                                "direction": "Inbound",
                                "access": "Deny"
                            }
                        },
                        {
                            "type": "Microsoft.Resources/deploymentScripts",
                            "apiVersion": "2020-10-01",
                            "name": "alz-deploymentscript-config",
                            "location": "[parameters('location')]",
                            "kind": "AzurePowerShell",
                            "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                    "[format('{0}', parameters('userAssignedIdentityId'))]": {}
                                }
                            },
                            "properties": {
                                "azPowerShellVersion": "12.3",
                                "retentionInterval": "PT1H",
                                "timeout": "PT1H",
                                "arguments": "[format('-regions \"{0}\" -rgName \"{1}\" -configIds \"{2}\" -connSubId \"{3}\"', parameters('location'), parameters('rgName'), parameters('configIds'), parameters('connectivitySubscriptionId'))]",
                                "scriptContent": "
                                    param(
                                        [Parameter(Mandatory=$true, HelpMessage=\"Location for deployment.\")]
                                        [string]
                                        $regions,

                                        [Parameter(Mandatory=$true, HelpMessage=\"Resource Group Name.\")]
                                        [string]
                                        $rgName,

                                        [Parameter(Mandatory=$true, HelpMessage=\"Configuration IDs.\")]
                                        [string]
                                        $configIds,

                                        [Parameter(Mandatory=$true, HelpMessage=\"Connectivity subscription id.\")]
                                        [string]
                                        $connSubId
                                    )

                                    Select-AzSubscription -SubscriptionId $connSubId

                                    Deploy-AzNetworkManagerCommit -ResourceGroupName $rgName -Name \"avnm\" -TargetLocation $regions -CommitType \"SecurityAdmin\" -ConfigurationId $configIds
                                    
                                "
                            },
                            "metadata": {
                                "description": "Create a Deployment Script resource to perform the configuration deployment."
                            }
                        }
                        
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "alz-avnm-uai",
            "resourceGroup": "[variables('rgName')]",
            "properties": {
                "expressionEvaluationOptions": {
                "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                "location": {
                    "value": "[parameters('location')]"
                },
                "eslzRootName": {
                    "value": "[parameters('topLevelManagementGroupPrefix')]"
                }
                },
                "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                    "location": {
                    "type": "string"
                    },
                    "eslzRootName": {
                    "type": "string"
                    }
                },
                "variables": {},
                "resources": [
                    {
                    "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                    "apiVersion": "2022-01-31-preview",
                    "name": "[format('uai-avnm-{0}', parameters('location'))]",
                    "location": "[parameters('location')]",
                    "metadata": {
                        "description": "This user assigned identity is used by the Deployment Script resource to interact with Azure resources."
                    }
                    },
                    {
                    "type": "Microsoft.Authorization/roleAssignments",
                    "apiVersion": "2022-04-01",
                    "name": "[guid(resourceGroup().id, format('uai-avnm-{0}', parameters('location')))]",
                    "properties": {
                        "roleDefinitionId": "[subscriptionResourceId(parameters('eslzRootName'), 'Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('uai-avnm-{0}', parameters('location'))), '2022-01-31-preview').principalId]",
                        "principalType": "ServicePrincipal"
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('uai-avnm-{0}', parameters('location')))]"
                    ],
                    "metadata": {
                        "description": "This role assignment grants the user assigned identity the Contributor role on the resource group."
                    }
                    }
                ],
                "outputs": {
                    "userAssignedIdentityId": {
                    "type": "string",
                    "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('uai-avnm-{0}', parameters('location')))]"
                    }
                }
                }
            },
            "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
            ]
            },
            {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "name": "[format('ds-{0}-prereqs', parameters('location'))]",
            "resourceGroup": "[parameters('resourceGroupName')]",
            "properties": {
                "expressionEvaluationOptions": {
                "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                "location": {
                    "value": "[parameters('location')]"
                },
                "userAssignedIdentityId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'alz-prerequisites-uai'), '2022-09-01').outputs.userAssignedIdentityId.value]"
                },
                "eslzRootName": {
                    "value": "[parameters('eslzRootName')]"
                }
                },
                "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                    "location": {
                    "type": "string"
                    },
                    "eslzRootName":{
                        "type": "string"
                    },
                    "userAssignedIdentityId": {
                    "type": "string"
                    }
                },
                "resources": [
                    {
                    "type": "Microsoft.Resources/deploymentScripts",
                    "apiVersion": "2020-10-01",
                    "name": "alz-deploymentscript",
                    "location": "[parameters('location')]",
                    "kind": "AzurePowerShell",
                    "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                        "[format('{0}', parameters('userAssignedIdentityId'))]": {}
                        }
                    },
                    "properties": {
                        "azPowerShellVersion": "12.3",
                        "retentionInterval": "PT1H",
                        "timeout": "PT1H",
                        "arguments": "[format('-eslzRootName \"{0}\"', parameters('eslzRootName'))]",
                        "scriptContent": "
                            param(
                                [Parameter(Mandatory=$true, HelpMessage=\"Enter the ESLZ root name.\")]
                                [string]
                                $eslzRootName
                            )

                            Invoke-AzRestMethod -Method POST -Uri \"https://management.azure.com/providers/Microsoft.Management/managementGroups/$eslzRootName/providers/Microsoft.Network/register?api-version=2021-04-01\"
                            
                            #Sleep for 30 minutes to wait for Management Groups to load to cache before assignments
                            Start-Sleep -Duration (New-TimeSpan -Minutes 10)

                            Invoke-AzRestMethod -Method POST -Uri \"https://management.azure.com/providers/Microsoft.Management/managementGroups/$eslzRootName/providers/Microsoft.Network/register?api-version=2021-04-01\"
                        "
                    },
                    "metadata": {
                        "description": "Create a Deployment Script resource to perform the prerequisites."
                    }
                    }
                ],
                    "outputs": {}
                }
            },
            "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'alz-prerequisites-uai')]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
            ]
            }
    ],
    "outputs": {}
}